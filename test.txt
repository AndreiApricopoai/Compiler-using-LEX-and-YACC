START:

GLOBAL:
int x = 10;

int a;
int b;
char c;
int num;
bool r;
bool ddd = true;
bool eee = false;

string aaaaaa[] = {"1111","2222","3333"};
string nume = "andrei";
string ss;

float fval = 20.5;
float fgol;


int my_arr[20];
bool bools[100] = {true,false,true,true};
float floatsir[] = {1.2,2.5,3.0};
int integers[] = {1,2,3,4,5};

char test1 = 'a';
char test2 = '2';


TYPE Student student;


END_GLOBAL


FUNCTIONS:

    int func(){

        return 1;
    }

    int funct(int param){

        return 2;
    }

    int f(){
        int a;
        if(a>b){

        }
        else{

        }
        return 2;
    }

    



int func1(int param1, int param2, char param3, const int param4){

    int a;
    return rez;
}


int func2(int p1, int p2, Student student, int a[], int ba[100]){


    if(param1 > param2){
    a = 2;

    }

    while(c != 0){

    c = EVAL("c-1");
    }

    return rez;
}



END_FUNCTIONS


TYPES:

Student{

members:

    int mem1;
    int mem2 = 10;

methods:

    int func(){
        return 1;
    }

    int funct(int param){
        return a;
    }


    int met1(int param1, int param2){

        if(param1 > param2){
            a = 2;
        }

        int a;
        return rez;
    }

    bool met2(int param3, int param4){
        bool val; 
        int re;
        return val;
    }

}


Profesor{
members:
    
    int mem1;
    int mem2 = 10;

methods:

    int met1(int param1, int param2){

        if(param1 > param2){
            a = 2;

        }

        return rez;
    }

    bool met2(int param3, int param4){
        bool val; 
        int as;
        return val;
    }
    }


END_TYPES




MAIN:

int a;
int x = 3;
char b;
bool r;
bool d = true;
bool e = false;
string ss;
string s;
float f = 20.5;
float g;
const int l = 20;
int my_arr[20];
bool bs[100] = {true,false,true,true};
float fsir[] = {1.2,2.5,3.0};
int integers[] = {1,2,3,4,5};
TYPE Student student;


student-->mem1 = 12;
student-->met1(a,c);

integers[2] = 5;

TypeOf("fsir[1] + fsir[1]");

int c;

int k = 2;

int var = 5;

int j[] = {3,5}; 


EVAL("(5+j[0])*x+5/5+func1(func2(y))");

var = 9;

EVAL("(var+2)");

int rev[50] = {0,1,2,3,4,5};



EVAL("(integers[0])");
integers[0] = rev[4];

EVAL("(integers[0])");




while(c != 0){

}


for(c = 1 ; c<10 ; c = c + 1){
    int n = 10;
}

if(c > 20){
    int A;
    A = 0;
}


END_MAIN


END