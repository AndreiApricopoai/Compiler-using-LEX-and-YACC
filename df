Terminals unused in grammar

    MEMBERS
    METHODS
    ACCES
    CUSTOM_TYPE
    EVAL
    PRINT
    TYPEOF
    IF
    FOR
    WHILE
    RETURN
    ARITHMETIC_OPERATOR
    RELATIONAL_OPERATOR
    '+'
    '-'
    '*'
    '/'


Grammar

    0 $accept: program $end

    1 program: START continut END

    2 continut: block
    3         | continut block

    4 block: GLOBAL global END_GLOBAL
    5      | FUNCTIONS functions END_FUNCTIONS
    6      | TYPES types END_TYPES
    7      | MAIN main END_MAIN

    8 global: variabila ';'
    9       | global variabila ';'

   10 variabila: DATA_TYPE IDENTIFIER
   11          | DATA_TYPE IDENTIFIER ASSIGN value
   12          | CONST DATA_TYPE IDENTIFIER
   13          | CONST DATA_TYPE IDENTIFIER ASSIGN value
   14          | DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE ']'
   15          | DATA_TYPE IDENTIFIER '[' ']'
   16          | DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE ']' ASSIGN '{' array_values '}'
   17          | DATA_TYPE IDENTIFIER '[' ']' ASSIGN '{' array_values '}'

   18 value: INTEGER_VALUE
   19      | BOOL_VALUE
   20      | STRING_VALUE
   21      | CHAR_VALUE
   22      | FLOAT_VALUE

   23 array_values: value
   24             | array_values ',' value

   25 functions: routines

   26 routines: routine
   27         | routines routine

   28 routine: DATA_TYPE IDENTIFIER '(' ')'

   29 types: ε

   30 main: ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 28
    ')' (41) 28
    '*' (42)
    '+' (43)
    ',' (44) 24
    '-' (45)
    '/' (47)
    ';' (59) 8 9
    '[' (91) 14 15 16 17
    ']' (93) 14 15 16 17
    '{' (123) 16 17
    '}' (125) 16 17
    error (256)
    START (258) 1
    GLOBAL (259) 4
    END_GLOBAL (260) 4
    FUNCTIONS (261) 5
    END_FUNCTIONS (262) 5
    TYPES (263) 6
    END_TYPES (264) 6
    MEMBERS (265)
    METHODS (266)
    MAIN (267) 7
    END_MAIN (268) 7
    END (269) 1
    DATA_TYPE (270) 10 11 12 13 14 15 16 17 28
    CONST (271) 12 13
    ACCES (272)
    CUSTOM_TYPE (273)
    IDENTIFIER (274) 10 11 12 13 14 15 16 17 28
    INTEGER_VALUE (275) 18
    ABSOLUTE_VALUE (276) 14 16
    BOOL_VALUE (277) 19
    FLOAT_VALUE (278) 22
    STRING_VALUE (279) 20
    CHAR_VALUE (280) 21
    EVAL (281)
    PRINT (282)
    TYPEOF (283)
    IF (284)
    FOR (285)
    WHILE (286)
    RETURN (287)
    ASSIGN (288) 11 13 16 17
    ARITHMETIC_OPERATOR (289)
    RELATIONAL_OPERATOR (290)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1
        on right: 0
    continut (50)
        on left: 2 3
        on right: 1 3
    block (51)
        on left: 4 5 6 7
        on right: 2 3
    global (52)
        on left: 8 9
        on right: 4 9
    variabila (53)
        on left: 10 11 12 13 14 15 16 17
        on right: 8 9
    value (54)
        on left: 18 19 20 21 22
        on right: 11 13 23 24
    array_values (55)
        on left: 23 24
        on right: 16 17 24
    functions (56)
        on left: 25
        on right: 5
    routines (57)
        on left: 26 27
        on right: 25 27
    routine (58)
        on left: 28
        on right: 26 27
    types (59)
        on left: 29
        on right: 6
    main (60)
        on left: 30
        on right: 7


State 0

    0 $accept: • program $end

    START  shift, and go to state 1

    program  go to state 2


State 1

    1 program: START • continut END

    GLOBAL     shift, and go to state 3
    FUNCTIONS  shift, and go to state 4
    TYPES      shift, and go to state 5
    MAIN       shift, and go to state 6

    continut  go to state 7
    block     go to state 8


State 2

    0 $accept: program • $end

    $end  shift, and go to state 9


State 3

    4 block: GLOBAL • global END_GLOBAL

    DATA_TYPE  shift, and go to state 10
    CONST      shift, and go to state 11

    global     go to state 12
    variabila  go to state 13


State 4

    5 block: FUNCTIONS • functions END_FUNCTIONS

    DATA_TYPE  shift, and go to state 14

    functions  go to state 15
    routines   go to state 16
    routine    go to state 17


State 5

    6 block: TYPES • types END_TYPES

    $default  reduce using rule 29 (types)

    types  go to state 18


State 6

    7 block: MAIN • main END_MAIN

    $default  reduce using rule 30 (main)

    main  go to state 19


State 7

    1 program: START continut • END
    3 continut: continut • block

    GLOBAL     shift, and go to state 3
    FUNCTIONS  shift, and go to state 4
    TYPES      shift, and go to state 5
    MAIN       shift, and go to state 6
    END        shift, and go to state 20

    block  go to state 21


State 8

    2 continut: block •

    $default  reduce using rule 2 (continut)


State 9

    0 $accept: program $end •

    $default  accept


State 10

   10 variabila: DATA_TYPE • IDENTIFIER
   11          | DATA_TYPE • IDENTIFIER ASSIGN value
   14          | DATA_TYPE • IDENTIFIER '[' ABSOLUTE_VALUE ']'
   15          | DATA_TYPE • IDENTIFIER '[' ']'
   16          | DATA_TYPE • IDENTIFIER '[' ABSOLUTE_VALUE ']' ASSIGN '{' array_values '}'
   17          | DATA_TYPE • IDENTIFIER '[' ']' ASSIGN '{' array_values '}'

    IDENTIFIER  shift, and go to state 22


State 11

   12 variabila: CONST • DATA_TYPE IDENTIFIER
   13          | CONST • DATA_TYPE IDENTIFIER ASSIGN value

    DATA_TYPE  shift, and go to state 23


State 12

    4 block: GLOBAL global • END_GLOBAL
    9 global: global • variabila ';'

    END_GLOBAL  shift, and go to state 24
    DATA_TYPE   shift, and go to state 10
    CONST       shift, and go to state 11

    variabila  go to state 25


State 13

    8 global: variabila • ';'

    ';'  shift, and go to state 26


State 14

   28 routine: DATA_TYPE • IDENTIFIER '(' ')'

    IDENTIFIER  shift, and go to state 27


State 15

    5 block: FUNCTIONS functions • END_FUNCTIONS

    END_FUNCTIONS  shift, and go to state 28


State 16

   25 functions: routines •
   27 routines: routines • routine

    DATA_TYPE  shift, and go to state 14

    $default  reduce using rule 25 (functions)

    routine  go to state 29


State 17

   26 routines: routine •

    $default  reduce using rule 26 (routines)


State 18

    6 block: TYPES types • END_TYPES

    END_TYPES  shift, and go to state 30


State 19

    7 block: MAIN main • END_MAIN

    END_MAIN  shift, and go to state 31


State 20

    1 program: START continut END •

    $default  reduce using rule 1 (program)


State 21

    3 continut: continut block •

    $default  reduce using rule 3 (continut)


State 22

   10 variabila: DATA_TYPE IDENTIFIER •
   11          | DATA_TYPE IDENTIFIER • ASSIGN value
   14          | DATA_TYPE IDENTIFIER • '[' ABSOLUTE_VALUE ']'
   15          | DATA_TYPE IDENTIFIER • '[' ']'
   16          | DATA_TYPE IDENTIFIER • '[' ABSOLUTE_VALUE ']' ASSIGN '{' array_values '}'
   17          | DATA_TYPE IDENTIFIER • '[' ']' ASSIGN '{' array_values '}'

    ASSIGN  shift, and go to state 32
    '['     shift, and go to state 33

    $default  reduce using rule 10 (variabila)


State 23

   12 variabila: CONST DATA_TYPE • IDENTIFIER
   13          | CONST DATA_TYPE • IDENTIFIER ASSIGN value

    IDENTIFIER  shift, and go to state 34


State 24

    4 block: GLOBAL global END_GLOBAL •

    $default  reduce using rule 4 (block)


State 25

    9 global: global variabila • ';'

    ';'  shift, and go to state 35


State 26

    8 global: variabila ';' •

    $default  reduce using rule 8 (global)


State 27

   28 routine: DATA_TYPE IDENTIFIER • '(' ')'

    '('  shift, and go to state 36


State 28

    5 block: FUNCTIONS functions END_FUNCTIONS •

    $default  reduce using rule 5 (block)


State 29

   27 routines: routines routine •

    $default  reduce using rule 27 (routines)


State 30

    6 block: TYPES types END_TYPES •

    $default  reduce using rule 6 (block)


State 31

    7 block: MAIN main END_MAIN •

    $default  reduce using rule 7 (block)


State 32

   11 variabila: DATA_TYPE IDENTIFIER ASSIGN • value

    INTEGER_VALUE  shift, and go to state 37
    BOOL_VALUE     shift, and go to state 38
    FLOAT_VALUE    shift, and go to state 39
    STRING_VALUE   shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41

    value  go to state 42


State 33

   14 variabila: DATA_TYPE IDENTIFIER '[' • ABSOLUTE_VALUE ']'
   15          | DATA_TYPE IDENTIFIER '[' • ']'
   16          | DATA_TYPE IDENTIFIER '[' • ABSOLUTE_VALUE ']' ASSIGN '{' array_values '}'
   17          | DATA_TYPE IDENTIFIER '[' • ']' ASSIGN '{' array_values '}'

    ABSOLUTE_VALUE  shift, and go to state 43
    ']'             shift, and go to state 44


State 34

   12 variabila: CONST DATA_TYPE IDENTIFIER •
   13          | CONST DATA_TYPE IDENTIFIER • ASSIGN value

    ASSIGN  shift, and go to state 45

    $default  reduce using rule 12 (variabila)


State 35

    9 global: global variabila ';' •

    $default  reduce using rule 9 (global)


State 36

   28 routine: DATA_TYPE IDENTIFIER '(' • ')'

    ')'  shift, and go to state 46


State 37

   18 value: INTEGER_VALUE •

    $default  reduce using rule 18 (value)


State 38

   19 value: BOOL_VALUE •

    $default  reduce using rule 19 (value)


State 39

   22 value: FLOAT_VALUE •

    $default  reduce using rule 22 (value)


State 40

   20 value: STRING_VALUE •

    $default  reduce using rule 20 (value)


State 41

   21 value: CHAR_VALUE •

    $default  reduce using rule 21 (value)


State 42

   11 variabila: DATA_TYPE IDENTIFIER ASSIGN value •

    $default  reduce using rule 11 (variabila)


State 43

   14 variabila: DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE • ']'
   16          | DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE • ']' ASSIGN '{' array_values '}'

    ']'  shift, and go to state 47


State 44

   15 variabila: DATA_TYPE IDENTIFIER '[' ']' •
   17          | DATA_TYPE IDENTIFIER '[' ']' • ASSIGN '{' array_values '}'

    ASSIGN  shift, and go to state 48

    $default  reduce using rule 15 (variabila)


State 45

   13 variabila: CONST DATA_TYPE IDENTIFIER ASSIGN • value

    INTEGER_VALUE  shift, and go to state 37
    BOOL_VALUE     shift, and go to state 38
    FLOAT_VALUE    shift, and go to state 39
    STRING_VALUE   shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41

    value  go to state 49


State 46

   28 routine: DATA_TYPE IDENTIFIER '(' ')' •

    $default  reduce using rule 28 (routine)


State 47

   14 variabila: DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE ']' •
   16          | DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE ']' • ASSIGN '{' array_values '}'

    ASSIGN  shift, and go to state 50

    $default  reduce using rule 14 (variabila)


State 48

   17 variabila: DATA_TYPE IDENTIFIER '[' ']' ASSIGN • '{' array_values '}'

    '{'  shift, and go to state 51


State 49

   13 variabila: CONST DATA_TYPE IDENTIFIER ASSIGN value •

    $default  reduce using rule 13 (variabila)


State 50

   16 variabila: DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE ']' ASSIGN • '{' array_values '}'

    '{'  shift, and go to state 52


State 51

   17 variabila: DATA_TYPE IDENTIFIER '[' ']' ASSIGN '{' • array_values '}'

    INTEGER_VALUE  shift, and go to state 37
    BOOL_VALUE     shift, and go to state 38
    FLOAT_VALUE    shift, and go to state 39
    STRING_VALUE   shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41

    value         go to state 53
    array_values  go to state 54


State 52

   16 variabila: DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE ']' ASSIGN '{' • array_values '}'

    INTEGER_VALUE  shift, and go to state 37
    BOOL_VALUE     shift, and go to state 38
    FLOAT_VALUE    shift, and go to state 39
    STRING_VALUE   shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41

    value         go to state 53
    array_values  go to state 55


State 53

   23 array_values: value •

    $default  reduce using rule 23 (array_values)


State 54

   17 variabila: DATA_TYPE IDENTIFIER '[' ']' ASSIGN '{' array_values • '}'
   24 array_values: array_values • ',' value

    '}'  shift, and go to state 56
    ','  shift, and go to state 57


State 55

   16 variabila: DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE ']' ASSIGN '{' array_values • '}'
   24 array_values: array_values • ',' value

    '}'  shift, and go to state 58
    ','  shift, and go to state 57


State 56

   17 variabila: DATA_TYPE IDENTIFIER '[' ']' ASSIGN '{' array_values '}' •

    $default  reduce using rule 17 (variabila)


State 57

   24 array_values: array_values ',' • value

    INTEGER_VALUE  shift, and go to state 37
    BOOL_VALUE     shift, and go to state 38
    FLOAT_VALUE    shift, and go to state 39
    STRING_VALUE   shift, and go to state 40
    CHAR_VALUE     shift, and go to state 41

    value  go to state 59


State 58

   16 variabila: DATA_TYPE IDENTIFIER '[' ABSOLUTE_VALUE ']' ASSIGN '{' array_values '}' •

    $default  reduce using rule 16 (variabila)


State 59

   24 array_values: array_values ',' value •

    $default  reduce using rule 24 (array_values)
